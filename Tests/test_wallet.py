

import unittest
from Wallet import evm_wallet


class TestWallet(unittest.TestCase):

	def test_checksum_address(self):

		self.assertEqual(evm_wallet.checksum_address("bbe8bb8ca3f5651220c9313cd4440e4805afdf04"), "abe8bB8CA3F5651220c9313Cd4440E4805AfDf04")
		self.assertEqual(evm_wallet.checksum_address("4598d8ef230f659d435c04a0c087e23ceec0e88b"), "4598D8EF230f659D435C04a0c087e23ceEC0E88b")
		self.assertEqual(evm_wallet.checksum_address("310f8727dd91502e3f4486084fa5c62ca0099cb4"), "310F8727DD91502E3F4486084fa5C62CA0099cB4")


	def test_rlp_encode_access_list(self):

		result0 = evm_wallet.rlp_encode_access_list([])
		result1 = evm_wallet.rlp_encode_access_list([["a0a24360cE64d364C0afB4325B6b70c66fDA24cd", ["0000000000000000000000000000000000000000000000000000000000000003", "0000000000000000000000000000000000000000000000000000000000000069"]]])
		result2 = evm_wallet.rlp_encode_access_list([["a0a24360cE64d364C0afB4325B6b70c66fDA24cd", ["0000000000000000000000000000000000000000000000000000000000000003", "0000000000000000000000000000000000000000000000000000000000000069"]],["a31df417ab346e0c45955e3e30e998defe9efe74", ["00000000000000000000000000000000000000000000000000000000000000fe", "0000000000000000000000000000000000000000000000000000000000000000"]]])

		self.assertEqual(result0, "c0")
		self.assertEqual(result1, "f85bf85994a0a24360cE64d364C0afB4325B6b70c66fDA24cdf842a00000000000000000000000000000000000000000000000000000000000000003a00000000000000000000000000000000000000000000000000000000000000069")
		self.assertEqual(result2, "f8b6f85994a0a24360cE64d364C0afB4325B6b70c66fDA24cdf842a00000000000000000000000000000000000000000000000000000000000000003a00000000000000000000000000000000000000000000000000000000000000069f85994a31df417ab346e0c45955e3e30e998defe9efe74f842a000000000000000000000000000000000000000000000000000000000000000fea00000000000000000000000000000000000000000000000000000000000000000")


	def test_rlp_encode_list(self):

		self.assertEqual(evm_wallet.rlp_encode_list("94abe8bb8ca3f5651220c9313cd4440e4805afdf0440"), "d694abe8bb8ca3f5651220c9313cd4440e4805afdf0440")


	def test_rlp_encode_string(self):

		with self.assertRaises(ValueError):
			evm_wallet.rlp_encode_string("0xabe8bB8CA3F5651220c9313Cd4440E4805AfDf04")
		self.assertEqual(evm_wallet.rlp_encode_string(0), "80")
		self.assertEqual(evm_wallet.rlp_encode_string("abe8bB8CA3F5651220c9313Cd4440E4805AfDf04"), "94abe8bB8CA3F5651220c9313Cd4440E4805AfDf04")
		self.assertEqual(evm_wallet.rlp_encode_string("4ba5d2210000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000004"), "b8844ba5d2210000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000004")


	def test_contract_creation_address(self):

		self.assertEqual(evm_wallet.contract_creation_address("abe8bb8ca3f5651220c9313cd4440e4805afdf04", 64), "1040cda0207400809ad33db4b19d318fe78a7900")


if __name__ == "__main__":
	unittest.main()